{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputval","setInputval","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gif","map","image","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","catch","err","useFetchGifs","console","log","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,IAFG,mBAErCC,EAFqC,KAE3BC,EAF2B,KAqB5C,OACK,sBAAMC,SAZQ,SAACC,GAChBA,EAAEC,iBAEEJ,EAASK,OAAOC,OAAO,IACvBR,GAAc,SAAAS,GAAK,OAAIP,GAAJ,mBAAgBO,OACnCN,EAAY,MAOf,SACG,uBACQO,KAAK,OACLC,MAAOT,EACPU,SArBQ,SAACP,GAErBF,EAAYE,EAAEQ,OAAOF,a,+BCVhBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAGKI,MAAMF,GAHX,cAGZG,EAHY,gBAKGA,EAASC,OALZ,uBAKXC,EALW,EAKXA,KAEDC,EAAID,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAClB,MAAO,CACCC,GAAID,EAAMC,GACVC,MAAMF,EAAME,MACZV,IAAG,UAACQ,EAAMG,cAAP,aAAC,EAAcC,iBAAiBZ,QAXjC,kBAgBXM,GAhBW,4CAAF,sDCEb,IAAMO,EAAc,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAI7B,OACI,sBAAKI,UAAW,yCAAhB,UACI,qBAAKC,IAAKf,EAAMgB,IAAKN,IACrB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDxB,SAAsBA,GAAW,IAAD,EAEjBd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ+B,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAuB3C,OAhBAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,OAGdM,OAAM,SAACC,SAGZ,CAAC3B,IAIIqB,EDpBuBO,CAAa5B,GAA/Ba,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAIpB,OAFAS,QAAQC,IAAIV,GAGR,qCACA,oBAAIJ,UAAU,qCAAd,SAAoDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAACsB,GAAD,OAED,cAAC,EAAD,eAEcA,GADCA,EAAIpB,aEnBpCqB,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,gBAFhB,mBAEvB+C,EAFuB,KAEXhD,EAFW,KAI9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQgD,EAAWxB,KAAK,SAACT,GAAD,OAAc,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCThEkC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d8ef3843.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n    const [inputval, setInputval] = useState('')\r\n   \r\n\r\n    const handleInputChange=(e)=>{\r\n        //console.log(e.target.value);\r\n        setInputval(e.target.value)\r\n    }\r\n\r\n    const haddleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if (inputval.trim().length>2) {\r\n            setCategories(catgs=> [inputval,...catgs]);\r\n            setInputval('');            \r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n         <form onSubmit={haddleSubmit}>\r\n            <input \r\n                    type='text' \r\n                    value={inputval }\r\n                    onChange={handleInputChange}\r\n            />  \r\n         </form>  \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired,\r\n}","export const getGifs= async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YteYIINNZxAuuVqmWPkxvX5LaFA2sytg`;\r\n\r\n    const response = await fetch(url);\r\n\r\n    const {data} = await response.json();\r\n\r\n    const gif=data.map(image=>{\r\n            return {\r\n                    id: image.id,\r\n                    title:image.title,\r\n                    url:image.images?.downsized_medium.url\r\n            } \r\n    });\r\n\r\n   // console.log(gif);\r\n    return gif;\r\n};  ","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,title}) => {\r\n    \r\n   // console.log(id,url,title);\r\n\r\n    return (\r\n        <div className ='card animate__animated animate__fadeIn'>\r\n            <img src={url}  alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading}= useFetchGifs(category);\r\n    \r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIns'>{category}</h3>\r\n       \r\n       {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n        <div className='card-grid'>\r\n            \r\n            \r\n                {\r\n                    images.map((img)=>\r\n                            (\r\n                              <GifGridItem\r\n                                        key={img.id }\r\n                                        {...img} \r\n                               />\r\n                            )\r\n                    )\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs}     from '../helpers/getGifs';\r\n\r\nexport default function useFetchGifs(category) {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            \r\n            setstate({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n\r\n        }).catch((err) => {\r\n            \r\n        });\r\n    },[category]);\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( (category)=> (<GifGrid key={category} category={category} />))\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}